version: '3.8'

services:
  postiz:
    image: 'ghcr.io/gitroomhq/postiz-app:latest'
    container_name: postiz
    restart: always
    environment:
      MAIN_URL: '${YOUR_DOMAIN}'
      FRONTEND_URL: '${YOUR_DOMAIN}'
      NEXT_PUBLIC_BACKEND_URL: '${YOUR_DOMAIN}/api'
      JWT_SECRET: '${JWT_SECRET}'
      DATABASE_URL: 'postgresql://postiz-user:postiz-password@postgres:5432/postiz-db-local'
      REDIS_URL: 'redis://redis:6379'
      BACKEND_INTERNAL_URL: 'http://localhost:3000'
      IS_GENERAL: 'true'
      STORAGE_PROVIDER: local
      UPLOAD_DIRECTORY: /uploads
      NEXT_PUBLIC_UPLOAD_DIRECTORY: /uploads
      YOUTUBE_CLIENT_ID: '${YOUTUBE_CLIENT_ID}'
      YOUTUBE_CLIENT_SECRET: '${YOUTUBE_CLIENT_SECRET}'
      X_API_KEY: '${X_API_KEY}'
      X_API_SECRET: '${X_API_SECRET}'
      TIKTOK_CLIENT_ID: '${TIKTOK_CLIENT_ID}'
      TIKTOK_CLIENT_SECRET: '${TIKTOK_CLIENT_SECRET}'
      THREADS_APP_ID: '${THREADS_APP_ID}'
      THREADS_APP_SECRET: '${THREADS_APP_SECRET}'
      TELEGRAM_BOT_NAME: '${TELEGRAM_BOT_NAME}'
      TELEGRAM_TOKEN: '${TELEGRAM_TOKEN}'
      SLACK_ID: '${SLACK_ID}'
      SLACK_SECRET: '${SLACK_SECRET}'
      REDDIT_CLIENT_ID: '${REDDIT_CLIENT_ID}'
      REDDIT_CLIENT_SECRET: '${REDDIT_CLIENT_SECRET}'
      PINTEREST_CLIENT_ID: '${PINTEREST_CLIENT_ID}'
      PINTEREST_CLIENT_SECRET: '${PINTEREST_CLIENT_SECRET}'
      MASTODON_CLIENT_ID: '${MASTODON_CLIENT_ID}'
      MASTODON_CLIENT_SECRET: '${MASTODON_CLIENT_SECRET}'
      LINKEDIN_CLIENT_ID: '${LINKEDIN_CLIENT_ID}'
      LINKEDIN_CLIENT_SECRET: '${LINKEDIN_CLIENT_SECRET}'
      FACEBOOK_APP_ID: '${FACEBOOK_APP_ID}'
      FACEBOOK_APP_SECRET: '${FACEBOOK_APP_SECRET}'
      DISCORD_CLIENT_ID: '${DISCORD_CLIENT_ID}'
      DISCORD_CLIENT_SECRET: '${DISCORD_CLIENT_SECRET}'
      INSTAGRAM_APP_ID: '${INSTAGRAM_APP_ID}'
      INSTAGRAM_APP_SECRET: '${INSTAGRAM_APP_SECRET}'
    volumes:
      - 'postiz-config:/config/'
      - 'postiz-uploads:/uploads/'
    ports:
      - '5000:5000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: 'postgres:14.5'
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postiz-password
      POSTGRES_USER: postiz-user
      POSTGRES_DB: postiz-db-local
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
    healthcheck:
      test: 'pg_isready -U postiz-user -d postiz-db-local'
      interval: 10s
      timeout: 3s
      retries: 3

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - API_KEY=${API_KEY:-}
      - APP_DEBUG=false
      - APP_DOMAIN=${APP_DOMAIN}
      - APP_NAME=${APP_NAME}
      - APP_URL=${APP_URL}
      - DEFAULT_PLACEHOLDER_VIDEO=${DEFAULT_PLACEHOLDER_VIDEO}
      - GCP_BUCKET_NAME=${GCP_BUCKET_NAME}
      - GCP_SA_CREDENTIALS=${GCP_SA_CREDENTIALS}
      - GUNICORN_TIMEOUT=${GUNICORN_TIMEOUT:-300}
      - GUNICORN_WORKERS=${GUNICORN_WORKERS:-2}
      - LOCAL_STORAGE_PATH=${LOCAL_STORAGE_PATH}
      - PEXELS_API_KEY=${PEXELS_API_KEY}
      - PIXABAY_API_KEY=${PIXABAY_API_KEY}
      - REDIS_URL=redis://redis:6379
      - RQ_WORKERS=${RQ_WORKERS:-2}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_REGION=${S3_REGION}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - WHISPER_CACHE_DIR=/opt/whisper_cache
      - VOICE_FILES_PATH=/app/data/voices
    volumes:
      - whisper_models:/opt/whisper_cache
      - dahopevi_data:/app/data
      - voice_data:/app/data/voices
      - gcp-sa-credentials:/app/gcp-sa-credentials
      - tmp-assets:/tmp
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2'
        reservations:
          memory: 2G
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  whisper_models:
    driver: local
  redis_data:
    driver: local
  dahopevi_data:
    driver: local
  voice_data:
    driver: local
  gcp-sa-credentials:
    driver: local
  tmp-assets:
    driver: local
  postgres-data:
    driver: local
  postiz-config:
    driver: local
  postiz-uploads:
    driver: local

networks:
  default:
    name: dahopevi-network
